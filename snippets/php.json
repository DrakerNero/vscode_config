{
/*
	// Place your snippets for PHP here. Each snippet is defined under a snippet name and has a prefix, body and
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
	// same ids are connected.
	// Example:
	"Print to console": {
		"prefix": "log",
		"body": [
			"console.log('$1');",
			"$2"
		],
		"description": "Log output to console"
	}
*/
  "facade-creator": {
		"prefix": "facade.c",
		"body": [
			"public function $a(Request $$request) {",
			" return $$this->toEndUser(",
      "   $$this->processor->$a(",
      "     $$this->toProcessor($$request)",
      "   )",
      " );",
      "}"
		],
		"description": "Create Facade function"
	},
  "facade-get-validate": {
		"prefix": "facade.gv",
		"body": [
			"$$this->facadeValidate($$this->validators['$a'], $$request->input());"
		],
		"description": "Add Facade[GET] Validate function"
	},
  "facade-post-validate": {
		"prefix": "facade.pv",
		"body": [
      "$$this->facadeValidate($$this->validators['$a'], $$request->all());"
		],
		"description": "Create Facade[POST] Validate function"
	},
  "validator-creator": {
    "prefix": "validator.c",
    "body": [
      "'$a' => new Validator($this->rules['$a'], $this->messages['$a']),"
    ]
  },
  "rule-creator": {
    "prefix": "rule.c",
    "body": [
      "'$a' => [",
      "\t'$b' => 'required',",
      "]"
    ]
  },
  "message-creator": {
    "prefix": "message.c",
    "body": [
      "'$a' => [",
      "\t'$b.required' => '$b could not be empty',",
      "]"
    ]
  },
}